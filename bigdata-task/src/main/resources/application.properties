logback.root.path=${logback.root.path}

unicom.api.baseurl = ${unicom.api.baseurl}
	
unicom.api.sendMSMFromNumber = ${unicom.api.sendMSMFromNumber}
	
unicom.api.unicomAppkey = ${unicom.api.unicomAppkey}

unicom.api.unicomAppsecret = ${unicom.api.unicomAppsecret}
	
unicom.api.username = ${unicom.api.username}
	
unicom.api.password = ${unicom.api.password}

unicom.api.validcode=${unicom.api.validcode}


unicom.bill.api.buyUrl = ${unicom.bill.api.buyUrl}
unicom.bill.api.selectUrl = ${unicom.bill.api.selectUrl}
unicom.bill.api.key = ${unicom.bill.api.key}
unicom.bill.api.user = ${unicom.bill.api.user}
unicom.bill.api.password = ${unicom.bill.api.password}


unicom.zop.api.appCode = ${unicom.zop.api.appCode}
unicom.zop.api.url = ${unicom.zop.api.url}
unicom.zop.api.HmacMd5 = ${unicom.zop.api.HmacMd5}
unicom.zop.api.aes = ${unicom.zop.api.aes}
unicom.zop.api.channel = ${unicom.zop.api.channel}

mp.api.mpAppid=${mp.api.mpAppid}
mp.api.mpAppsecret=${mp.api.mpAppsecret}

mp.api.miniPAppid=${mp.api.miniPAppid}

mp.api.miniPAppsecret=${mp.api.miniPAppsecret}

mp.api.mchId=${mp.api.mchId}

mp.api.payKey=${mp.api.payKey}

mp.api.notifybaseurl=${mp.api.notifybaseurl}
	
unicom.weein.api.baseurl=${unicom.weein.api.baseurl}

other.sms.api.url = ${other.sms.api.url}
other.sms.api.templetid = ${other.sms.api.templetid}
other.sms.api.username = ${other.sms.api.username}
other.sms.api.password = ${other.sms.api.password}

unicom.api.strategy.baseurl=${unicom.api.strategy.baseurl}

direct.charge.url=${direct.charge.url}
direct.charge.key=${direct.charge.key}
direct.charge.userId=${direct.charge.userId}

prepaid.refill.user=${prepaid.refill.user}
prepaid.refill.password=${prepaid.refill.password}
prepaid.refill.api=${prepaid.refill.api}
prepaid.refill.query=${prepaid.refill.query}
prepaid.refill.account=${prepaid.refill.account}

mybatis.configLocation=classpath:mybatis/mybatis.config.xml
mybatis.mapperLocations=classpath:com/weein/*/dao/*.xml
mybatis.checkConfigLocation=true
#spring.profiles.active=test
spring.mvc.view.suffix=.do
spring.application.name=mini-programs-web

spring.datasource.type=org.apache.commons.dbcp.BasicDataSource
spring.datasource.url = ${spring.datasource.url}
spring.datasource.username = ${spring.datasource.username}
spring.datasource.password = ${spring.datasource.password}
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

spring.datasource.dbcp.maxActive=${spring.datasource.dbcp.maxActive}
spring.datasource.dbcp.initialSize=${spring.datasource.dbcp.initialSize}
spring.datasource.dbcp.maxWait=${spring.datasource.dbcp.maxWait}
spring.datasource.dbcp.minIdle=${spring.datasource.dbcp.minIdle}
spring.datasource.dbcp.timeBetweenEvictionRunsMillis=${spring.datasource.dbcp.timeBetweenEvictionRunsMillis}
spring.datasource.dbcp.minEvictableIdleTimeMillis=${spring.datasource.dbcp.minEvictableIdleTimeMillis}
spring.datasource.dbcp.validationQuery=${spring.datasource.dbcp.validationQuery}
spring.datasource.dbcp.testWhileIdle=${spring.datasource.dbcp.testWhileIdle}
spring.datasource.dbcp.testOnBorrow=${spring.datasource.dbcp.testOnBorrow}
spring.datasource.dbcp.testOnReturn=${spring.datasource.dbcp.testOnReturn}
spring.datasource.dbcp.poolPreparedStatements=${spring.datasource.dbcp.poolPreparedStatements}
spring.datasource.dbcp.maxOpenPreparedStatements=${spring.datasource.dbcp.maxOpenPreparedStatements}

# redis\u914d\u7f6e

redis.cache.pool.maxTotal=${redis.cache.pool.maxTotal}
redis.cache.pool.maxIdle=${redis.cache.pool.maxIdle}
redis.cache.pool.minIdle=${redis.cache.pool.minIdle}  
redis.cache.pool.maxWaitMillis=${redis.cache.pool.maxWaitMillis}
redis.cache.pool.testOnBorrow=${redis.cache.pool.testOnBorrow}
redis.cache.pool.testOnReturn=${redis.cache.pool.testOnReturn}
redis.cache.pool.testWhileIdle=${redis.cache.pool.testWhileIdle}

#redis-cluster
redis.cache.clusterNodes=${redis.cache.clusterNodes}
redis.cache.commandTimeout=${redis.cache.commandTimeout}


spring.http.multipart.maxFileSize=20MB
spring.http.multipart.maxRequestSize=21MB



spring.mail.host=${spring.mail.host}
spring.mail.port=${spring.mail.port}
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}
spring.mail.protocol=${spring.mail.protocol}
spring.mail.properties.mail.smtp.auth=${spring.mail.properties.mail.smtp.auth}
spring.mail.properties.mail.smtp.ssl.enable=${spring.mail.properties.mail.smtp.ssl.enable}
spring.mail.properties.mail.smtp.socketFactory.class=${spring.mail.properties.mail.smtp.socketFactory.class}
spring.mail.properties.mail.smtp.starttls.enable=${spring.mail.properties.mail.smtp.starttls.enable}
spring.mail.properties.mail.smtp.starttls.required=${spring.mail.properties.mail.smtp.starttls.required}




spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.h2.console.enabled=false



server.port=6011
server.tomcat.max-threads=900
server.tomcat.min-spare-threads=100
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto


#myserver.tomcat.maxThreads=2000
#myserver.tomcat.minSpareThreads=100
#myserver.tomcat.acceptCount=1000
#myserver.tomcat.connectionTimeout=-1
##myserver.tomcat.URIEncoding = "UTF-8";
#myserver.tomcat.disableUploadTimeout=true
#myserver.tomcat.enableLookups=false
#myserver.tomcat.compression=on
#myserver.tomcat.compressionMinSize=2048
#myserver.tomcat.compressableMimeType=gzip

endpoints.health.sensitive=false
endpoints.trace.enabled=false
endpoints.metrics.enabled=true
endpoints.env.enabled=false
endpoints.mappings.enabled=false
endpoints.autoconfig.enabled=false
endpoints.beans.enabled=true
endpoints.configprops.enabled=false


#server.ssl.key-store = classpath:keytool/.keystore
#server.ssl.key-store-password = 12345678
#server.ssl.key-password = 12345678

bigdata.jdbc.driver = ${bigdata.jdbc.driver}
bigdata.jdbc.url = ${bigdata.jdbc.url}
bigdata.jdbc.user = ${bigdata.jdbc.user}
bigdata.jdbc.password = ${bigdata.jdbc.password}

bigdata.wxxcl.api.url = ${bigdata.wxxcl.api.url}


spring.activemq.broker-url=${spring.activemq.broker-url}
spring.activemq.in-memory=${spring.activemq.in-memory}
spring.activemq.user=${spring.activemq.user}
spring.activemq.password=${spring.activemq.password}
#true表示使用连接池
spring.activemq.pool.enabled=${spring.activemq.pool.enabled}
#连接池最大连接数
spring.activemq.pool.max-connections=${spring.activemq.pool.max-connections}
#空闲的连接过期时间，默认为30秒
spring.activemq.pool.idle-timeout=${spring.activemq.pool.idle-timeout}
spring.activemq.pool.expiry-timeout=${spring.activemq.pool.expiry-timeout}

spring.aop.auto=true